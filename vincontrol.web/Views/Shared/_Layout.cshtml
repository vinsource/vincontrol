@using System.Web.Optimization
@using vincontrol.Application.ViewModels.AccountManagement
<!DOCTYPE html>

<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <title>@ViewBag.Title</title>
    <link rel="shortcut icon" media="all" type="image/x-icon" href="@Url.Content("~/Content/images/vincontrol/icon.ico")" />
    <meta name="viewport" content="width=device-width" />
    @Styles.Render("~/Content/css")    
    <style type="text/css">        
    </style>
    @RenderSection("css", required: false)
</head>
<body>    
    <div class="hidden">
        <div id="logout_confirm_popup" style="width: 350px; height: 160px;">
            <div style="color: #800; border-bottom: 2px solid #cdcdcd; text-align: center; font-size: 24px; padding-bottom: 3px;">Logout Confirm</div>
            <div style="text-align: center; margin-top: 20px; font-size: 17px;">Are you sure to logout this page?</div>
            <div style="width: 180px; height: 40px; margin: 20px auto;">
                <div id="logout_btn_ok" style="font-weight: bold; text-align: center; float: left; background-color: #2a558c; margin-right: 10px; width: 70px; color: white; font-size: 15px; padding: 4px; cursor: pointer;">Okay</div>
                <div id="logout_btn_cancel" style="font-weight: bold; background-color: #800; margin-right: 10px; width: 70px; float: right; text-align: center; color: white; font-size: 15px; padding: 4px; cursor: pointer;">Cancel</div>
            </div>
        </div>
        <div id="session_timeout_popup" style="width: 350px; height: 200px;">
            <div style="color: #800; border-bottom: 2px solid #cdcdcd; text-align: left; font-size: 20px; padding-bottom: 3px;">Session Time-out</div>
            <div style="text-align: center; margin-top: 20px; font-size: 12px;">
                <span style="width: 100%; height: 25px; clear: both; float: left;">Due to inactivity, your session will time out in</span>
                <span style="width: 100%; height: 25px; clear: both; float: left; font-size: 16px; font-weight: bold;"><span id="minute">5</span> minutes <span id="second">0</span> seconds</span>
                <span style="width: 100%; margin: 25px 0 10px 0; clear: both; float: left;">Do you want to continue your session or log off?</span>
            </div>
            <div style="width: 180px; height: 40px; margin: 20px auto;">
                <div id="continue_btn" style="font-weight: bold; text-align: center; float: left; background-color: #3266cc; margin-right: 10px; width: 70px; color: white; font-size: 15px; padding: 4px; cursor: pointer;">Continue</div>
                <div id="logoff_btn" style="font-weight: bold; background-color: #797979; margin-right: 10px; width: 70px; float: right; text-align: center; color: white; font-size: 15px; padding: 4px; cursor: pointer;">Log Off</div>
            </div>
        </div>
    </div>
    <div id="container">
        <div id="top_line">
        </div>
        <div id="container_left">
            <div id="container_left_logo">
                <img src="@Url.Content("~/Content/Images/logo-vincontrol.png")" />
            </div>
            <div id="container_left_seach">
                <div id="container_left_search_input">
                    <input type="text" id="txtVin" onfocus="if (this.value == 'Enter Vin / Year') this.value = '';" onblur="if (this.value == '') this.value = 'Enter Vin / Year';" value="Enter Vin / Year" />
                </div>
                <div id="container_left_search_btns">
                    <div class="cl_appraisal_btns_items" id="btnSubmit">
                        Appraise
                    </div>                    
                </div>

            </div>
            @Html.Partial("MainMenu")

            <div id="announcement_v2" class="announcement_v2" style="display: none">
                <div class="announcement_header">
                    VINControl System Update
                </div>
                <div class="announcement_text">We will be performing a system update on:</div>
                <div id="announcement_startdate" class="announcement_minutes"></div>
            </div>
        </div>
        <div id="container_right">
            <div id="container_right_top">
                <div id="container_right_top_holder">
                    <div id="container_right_top_MVP">
                        <div class="loSearchTop">
                            <input id="loSearchInput" type="text" placeholder="Search for year, make, model, trim and stock" />
                            <img id="searchImgLoading" src="../Content/images/ajaxloadingindicator.gif" height="30px" />
                            <div id="loSearchBtn"></div>
                            <div id="loSearchResult">
                                <div id="losrHeader">Search with <span id="losrKeyword"></span></div>
                                <div class="losrNoResultItems" id="loNoResultHolder">
                                    There are no results found.
                                </div>
                                <div class="losrItems" id="loInventoryHolder">
                                    <div class="losrType">Inventory</div>
                                    <div class="losrCars" id="loInventoryListSearch">
                                    </div>
                                    <div class="clear"></div>
                                </div>
                                <div class="losrItems" id="loAppraisalHolder">
                                    <div class="losrType">Appraisals</div>
                                    <div class="losrCars" id="loAppraisalListSearch">
                                    </div>
                                    <div class="clear"></div>
                                </div>
                                <div class="losrItems" id="loSoleOutHolder">
                                    <div class="losrType">Sold Out</div>
                                    <div class="losrCars" id="loSoldoutListSearch">
                                    </div>
                                    <div class="clear"></div>
                                </div>
                                
                            </div>
                            <div id="loShowMoreResult">
                                <div id="loShowMoreHeader">Show all <span style="color:rgb(159, 199, 255)" id="leoResultNumber"></span> results under keyword <span style="color: rgb(8, 206, 79)" id="leoResultKeyword"></span> in <span style="color: rgb(82, 163, 250)" id="leoResultType"></span></div>
                                <div id="loShowMoreList"></div>
                            </div>
                        </div>
                        <a onclick="ViewAdvance();">
                            <div class="container_left_advanceSearch" id="container_right_top_search">
                                Advanced Search
                            </div>
                        </a>
                    </div>
                    <div class="container_right_logout_mpv">

                        @{Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "MasterForm" });}
                        <input type="hidden" id="NeedToContinueWithBlankAppraisal" name="NeedToContinueWithBlankAppraisal" value="true" />
                        <input type="hidden" id="hdIsCreateNew" value="true" />
                        <ul class="user_profile_item_holder" id="user_profile_holder">
                            <li>
                                <div class="user_profile_item_text">
                                    @(((UserRoleViewModel)Session["CurrentUser"]).FullName)
                                    <span style="display: inline-block;" class="arrow-down"></span>
                                </div>
                                <ul class="user_profile_subitem_holder">
                                    <li class="user_profile_subitem" onclick="ChangePassword();">
                                        <div class="user_profile_subitem_text">
                                            <span>
                                                <img class="user_profile_subitem_icon" src="/Content/images/password.png" />
                                            </span>
                                            Change Password
                                        </div>
                                    </li>
                                    <li class="user_profile_subitem" onclick="LogOut();">
                                        <div class="user_profile_subitem_text">
                                            <span>
                                                <img class="user_profile_subitem_icon" src="/Content/images/logout.png" />
                                            </span>
                                            Log Out
                                        </div>
                                    </li>
                                </ul>
                            </li>
                        </ul>

                        @{Html.EndForm();}
                        <div class="mvp_cars_holder">
                            @Html.Raw(HTMLControlExtension.DynamicHtmlControlDealerSwitch())
                        </div>
                    </div>

                </div>
                
                @RenderSection("SubMenu", required: false)

            </div>
            @RenderBody()
        </div>
        <div style="clear: both">
        </div>
    </div>
    <div id="opacity-layer">
    </div>


    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery-1.6.4.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/js/jquery.blockUI.js")"></script>
    @Scripts.Render("~/bundles/js")    
    <script type="text/javascript">
        var waitingImage = '@Url.Content("~/Content/Images/ajaxloadingindicator.gif")';
        var timeoutTime = 60;
        var notifyBeforeTime = 5;
        var idleTime = 0, minute = 0, second = 0;
        var canReset = true;
        var idleInterval, countdownInterval;

        function MarkUnSoldFromVinDecodeNew(listingId) {
            var url = '@Url.Action("MarkUnSoldFromVinDecodeNew","Inventory", new { listingId = "PLACEHOLDER"})';
            url = url.replace('PLACEHOLDER', listingId);
            window.location = url;
        }

        function NewAppraisalFromSoldAlert(vin) {
            var url = '@Url.Action("NewAppraisalFromSoldAlert","Inventory", new { vin = "PLACEHOLDER"})';
            url = url.replace('PLACEHOLDER', vin);
            window.location = url;
        }

        function openMarkSoldIframe(listingId) {
            var markSoldUrl = '/Inventory/ViewMarkSold?listingId=' + listingId;
            $("<a href=" + markSoldUrl + "></a>").fancybox({
                height: 306,
                width: 455,
                overlayShow: true,
                showCloseButton: true,
                enableEscapeButton: true,
                type: 'iframe'
            }).click();
        }

        function PopupNewWindow(actionUrl) {
            $("<a href=" + actionUrl + "></a>").fancybox({
                height: 1115,
                width: 1300,
                overlayShow: true,
                showCloseButton: true,
                enableEscapeButton: true,
                type: 'iframe'
            }).click();
        }

        function PopupBuyerGuideWindow(actionUrl) {
            $("<a href=" + actionUrl + "></a>").fancybox({
                height: 915,
                width: 1000,
                overlayShow: true,
                showCloseButton: true,
                enableEscapeButton: true,
                type: 'iframe'
            }).click();
        }

        function alertMaintenance() {
            $.ajax({
                type: "GET",
                url: '@Url.Content("~/Maintenance/GetMaintenanceInfo")',
                dataType: "json",
                cache: false,
                success: function (data) {
                    if (data.IsMaintenance) {
                        $('#announcement_v2').show();
                        $('#announcement_startdate').html(getDateStringFromServer(data.DateStart));
                    } else {
                        $('#announcement_v2').hide();

                    }
                }
            });
        }

        function getSessionTimeout() {
            $.get("@Url.Content("~/Session/GetStartSessionTime")", function (data) {
                var currentDate = getDateFromServer(data.CurrentTime);
                var startSessionTime = getDateFromServer(data.StartSessionTime);
                console.log('startSessionTime');
                console.log(startSessionTime);
                console.log(currentDate);
                startSessionTime.setMinutes(startSessionTime.getMinutes() + timeoutTime + notifyBeforeTime * (-1));
                console.log(startSessionTime);
                if (startSessionTime <= currentDate) {
                    showExtendMessage();
                } else {
                    var timeDifference = startSessionTime - currentDate;
                    console.log(timeDifference);
                    callRestartSessionPopupWithInterval(timeDifference);
                }
            });
        }

        function showExtendMessage() {
            var result = confirm("Your time out period will be in " + notifyBeforeTime + " minutes. Do you want to extend your timeout?");
            if (result) {
                sendExtendTimeoutRequest();
                callRestartSessionPopupWithMiniuteInterval(timeoutTime - notifyBeforeTime);
            } else {

            }
        }

        function callRestartSessionPopupWithMiniuteInterval(interval) {
            setTimeout(function () { getSessionTimeout(); }, interval * 1000 * 60);
        }

        function callRestartSessionPopupWithInterval(interval) {
            setTimeout(function () { getSessionTimeout(); }, interval);
        }

        function sendExtendTimeoutRequest() {
            $.get("@Url.Content("~/Account/ExtendSession")", function (data) {
            });
        }

        function timerIncrement() {
            idleTime = idleTime + 1;
            if (idleTime > 55) { // if idle time is more than 25 minutes
                if (canReset) {
                    clearInterval(idleInterval);

                    canReset = false;
                    minute = 5;
                    second = 0;

                    $("#minute").html(minute);
                    $("#second").html(second);

                    $.fancybox({
                        href: "#session_timeout_popup",
                        closeBtn: false,
                    });
                    $(".fancybox-overlay").unbind();

                    countdownInterval = setInterval(function () {
                        if (second == 0) {
                            if (minute > 0) {
                                second = 59;
                                minute--;
                            }
                            else {
                                $("#logoff_btn").click();
                            }
                        }
                        else {
                            second--;
                        }
                        $("#minute").html(minute);
                        $("#second").html(second);
                    }, 1000);
                }
            }
        }

        function openWindowSticker(ListingId) {

            var actionUrl = '@Url.Action("PrintSticker", "PDF", new { ListingId = "PLACEHOLDER"  } )';

            actionUrl = actionUrl.replace('PLACEHOLDER', ListingId);

            window.open(actionUrl);
        }

        function formatDollar(amount) {
            if (amount == 0)
                return amount;

            amount = amount.toString().replace(/^0+/, '');
            amount += '';
            x = amount.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
            }
            return x1 + x2;
        }

        function IsNumeric(num) {
            return (num >= 0 || num < 0);

        }

        function getDateStringFromServer(value) {
            var startDateValue = getDateFromServer(value);
            return startDateValue.getMonth() + 1 + "/" + startDateValue.getDate() + "/" + startDateValue.getFullYear() + " " + startDateValue.getHours() + ":" + startDateValue.getMinutes() + ":" + startDateValue.getSeconds();
        }

        function getDateFromServer(value) {
            return new Date(parseInt(value.substr(6)));
        }

        function LogOut() {
            var actionUrl = '@Url.Action("ConfirmLogOut", "Account")';

            $("<a href=" + actionUrl + "></a>").fancybox({
                height: 130,
                width: 400,
                overlayShow: true,
                showCloseButton: true,
                enableEscapeButton: true,
                type: 'iframe'
            }).click();
        }

        function ChangePassword() {
            var actionUrl = '@Url.Action("ChangePassword", "Account")';

            $("<a href=" + actionUrl + "></a>").fancybox({
                height: 320,
                width: 500,
                padding: 0,
                overlayShow: true,
                showCloseButton: true,
                enableEscapeButton: true,
                type: 'iframe'
            }).click();
        }

        function SubmitLogOut() {
            $('#MasterForm').submit();
        }

        function SwitchDealerClose(result) {
            if (result == "Success") {
                var actionUrl = '@Url.Action("ViewInventory", "Inventory" )';
                window.parent.location.href = actionUrl;
            }
        }

        function ViewAdvance() {
            var text = $('#txtVin').val();
            var url = '@Url.Action("AdvancedSearch","Inventory",new { text = "" })';
            if (text != "Enter Vin / Year") {
                url = '@Url.Action("AdvancedSearch","Inventory",new { text = "_text" })';
                url = url.replace("_text", text);
            }
            window.location = url;
        }

        setInterval(function () {
            alertMaintenance();
        }, 900000);

        $(document).ready(function () {
            $(document).ajaxError(function (event, request, settings, error) {
                //alert(request.status + " " + request.statusText);
            });

            if ($('.user_profile_item_holder').width() > 150) {
                $('.arrow-down').css("float", "none");
            }

            $("#logout_btn").click(function () {
                $.fancybox({
                    href: "#logout_confirm_popup"
                });
            });
            $("#logout_btn_cancel").click(function () {
                $(".fancybox-close").trigger("click");
            });
            $("#logout_btn_ok").click(function () {
                window.location.href = "@Url.Action("LogOff", "Account")";
            });
            $("#continue_btn").click(function () {
                $.ajax({
                    async: true,
                    type: "GET",
                    url: '/home/keepalive',
                    cache: false,
                    traditional: true,
                    success: function (data) {
                        $.fancybox.close();
                        canReset = true;
                        idleTime = 0;
                        idleInterval = setInterval(timerIncrement, 60000); // 1 minute
                        clearInterval(countdownInterval);
                    },
                });
            });
            $("#logoff_btn").click(function () {
                window.location.href = "@Url.Action("LogOff", "Account")";
            });

            //Increment the idle time counter every minute.
            idleInterval = setInterval(timerIncrement, 60000); // 1 minute

            $(this).mousemove(function (e) {
                if (canReset)
                    idleTime = 0;
            });
            $(this).keypress(function (e) {
                if (canReset)
                    idleTime = 0;
            });
            alertMaintenance();
            //callRestartSessionPopupWithMiniuteInterval(timeoutTime - notifyBeforeTime);

            $.post('@Url.Content("~/Appraisal/GetPendingAppraisalNumber")', {}, function (data) {
                if (data != '-1' || isNaN(data) || data != '_TimeOut_') {
                    $('#PendingSpan').text(data == '_TimeOut_' ? '0' : data);
                }
            });

            var controller = '@ViewContext.RouteData.Values["controller"]';
            var action = '@ViewContext.RouteData.Values["action"]';
            $('div[id^="main_"]').removeClass("tab_active");

            if (controller == 'Market') {
                switch (action) {
                    case 'viewKPI': $('#main_kpi_tab').addClass('tab_active'); break;
                    case 'ViewKpi': $('#main_kpi_tab').addClass('tab_active'); break;
                    case 'ViewNewKpi': $('#main_kpi_tab').addClass('tab_active'); break;
                    case 'ViewAllDealerActivity': $('#main_activity_tab').addClass('tab_active'); break;
                    default: break;
                }
            } else if (controller == 'Tracking') {
                $('#main_activity_tab').addClass('tab_active');
            } else if (controller == 'Chart') {
                switch (action) {
                    case 'MarketSearch': $('#main_marketsearch_tab').addClass('tab_active'); break;
                    case 'ViewFullChart': $('#main_inventory_tab').addClass('tab_active'); break;
                    case 'NavigateToNationwide': $('#main_appraisals_tab').addClass('tab_active'); break;
                    default: break;
                }
            } else if (controller == 'Inventory') {
                $('#main_inventory_tab').addClass('tab_active');
            } else if (controller == 'Appraisal' || controller == 'Tradein') {
                $('#main_appraisals_tab').addClass('tab_active');
            } else if (controller == 'Admin') {
                $('#main_admin_tab').addClass('tab_active');
            } else if (controller == 'Report') {
                $('#main_report_tab').addClass('tab_active');
            } else if (controller == 'StockingGuide') {
                $('#main_marketsearch_tab').addClass('tab_active');
            }

            $('#txtVin').keypress(function (e) {
                if (e.which == 13) {
                    $('#btnSubmit').click();
                }
            });

            $('#DDLDealer').change(function () {
                $.ajax({
                    url: '@Url.Action("SwitchDealershipNew","Switch")',
                    type: "POST",
                    dataType: "json",
                    data: { selectedDealerTransferID: $("#DDLDealer option:selected").val() },
                    success: SwitchDealerClose
                });
            });           

            $("#btnSubmit").click(function () {
                blockUI();
                var vin = $("#txtVin").val();
                if (vin == "Enter Vin / Year" || vin == null || vin == '') {
                    $.unblockUI();
                    ShowWarningMessage("Please enter vin or valid year");
                }
                else {
                    var theDate = new Date();

                    if (IsNumeric(vin) && vin <= theDate.getFullYear() + 1 && vin > 1980) {
                        $('#elementID').removeClass('hideLoader');

                        var actionUrl = '@Url.Action("DecodeProcessingByYear", "Decode", new { Year = "PLACEHOLDER" } )';

                        actionUrl = actionUrl.replace('PLACEHOLDER', vin);

                        window.location = actionUrl;
                    }
                    else {
                        $('#elementID').removeClass('hideLoader');
                        $.get('@Url.Content("~/Decode/VinDecode")', { vin: vin }, function (result) {
                            if (result.Status == "SoldOut") {

                                $('#elementID').addClass('hideLoader');
                                var actionUrl = '@Url.Action("SoldOutAlert", "Inventory", new { ListingID = "PLACEHOLDER" } )';

                                actionUrl = actionUrl.replace('PLACEHOLDER', result.ListingId);
                                unblockUI();

                                $("<a href=" + actionUrl + "></a>").fancybox({
                                    height: 225,
                                    width: 470,
                                    overlayShow: true,
                                    showCloseButton: true,
                                    enableEscapeButton: true,
                                    type: 'iframe',
                                }).click();
                            }
                            else if (result.Status == "Inventory") {

                                var actionUrl = '@Url.Action("ViewIProfile", "Inventory", new { ListingID = "PLACEHOLDER" } )';

                                actionUrl = actionUrl.replace('PLACEHOLDER', result.ListingId);

                                window.location = actionUrl;
                            }
                            else if (result.Status == "Appraisal") {
                                var actionUrl;
                                if (result.IsEdit == false) {
                                    actionUrl = '@Url.Action("ViewProfileForAppraisal", "Appraisal", new { AppraisalId = "PLACEHOLDER" } )';
                                    actionUrl = actionUrl.replace('PLACEHOLDER', result.AppraisalId);
                                    window.location = actionUrl;
                                } else {
                                    actionUrl = '@Url.Action("ViewOrCreateNew", "Decode", new { Vin = "PLACEHOLDER" } )';
                                    actionUrl = actionUrl.replace('PLACEHOLDER', result.Vin);

                                    unblockUI();
                                    $("<a href=" + actionUrl + "></a>").fancybox({
                                        height: 150,
                                        width: 400,
                                        overlayShow: true,
                                        showCloseButton: true,
                                        enableEscapeButton: true,
                                        type: 'iframe',
                                        onClosed: function () {
                                            //window.location.reload(true);
                                            if ($("#hdIsCreateNew").val() == 'true') {
                                                window.location = '/Decode/DecodeProcessingByVin?Vin=' + vin;
                                            } else {
                                                actionUrl = '@Url.Action("ViewProfileForAppraisal", "Appraisal", new { AppraisalId = "PLACEHOLDER" } )';
                                                actionUrl = actionUrl.replace('PLACEHOLDER', result.AppraisalId);
                                                window.location = actionUrl;
                                            }
                                        }
                                    }).click();
                                }

                            }
                            else if (result.Status == "VinProcessing") {
                                var actionUrl = '@Url.Action("DecodeProcessingByVin", "Decode", new { Vin = "PLACEHOLDER" } )';

                                actionUrl = actionUrl.replace('PLACEHOLDER', result.Vin);

                                window.location = actionUrl;


                            }
                            else if (result.Status == "VinInvalid") {
                                $('#elementID').addClass('hideLoader');
                                var actionUrl = '@Url.Action("InvalidVinAlert", "Decode", new { Vin = "PLACEHOLDER" } )';

                                actionUrl = actionUrl.replace('PLACEHOLDER', result.Vin);
                                unblockUI();
                                $("<a href=" + actionUrl + "></a>").fancybox({
                                    height: 180,
                                    width: 400,
                                    overlayShow: true,
                                    showCloseButton: true,
                                    enableEscapeButton: true,
                                    type: 'iframe',
                                    onClosed: function () {
                                        var enterYear = parseInt($('#txtVin').val());
                                        //window.location.reload(true);
                                        if ($("#NeedToContinueWithBlankAppraisal").val() == 'true' && (enterYear == 0 || enterYear >= 1988)) {
                                            var currentTime = new Date();
                                            var year = currentTime.getFullYear();
                                            window.location.href = '/Decode/DecodeProcessingByYear?Year=' + year;
                                        } else {
                                            window.location.href = '/Decode/DecodeProcessingManual?Year=' + enterYear;
                                        }
                                    }
                                }).click();
                            }

                        });
                    }
                }
            });
        });

    </script>

    @RenderSection("scripts", required: false)
</body>
</html>
